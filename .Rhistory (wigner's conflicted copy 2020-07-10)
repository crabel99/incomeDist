load("~/Dropbox/src/statEcon/workspace.RData")
install.packages("rstan")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
library("rstan")
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
max <- c(totalIncome$Min,Inf)
max <- max(1:22)
max <- c(totalIncome$Min,Inf)
max <- max[1:22]
max <- c(totalIncome$Min,Inf)
max <- max[2:23]
View(totalIncome)
View(totalIncome)
Max <- c(max[1:17],Inf)
Max
Max00 <- max
rm(max)
X <- c(totalIncome$Min[1:18],Max)
X <- data.frame(totalIncome$Min[1:18],Max)
names(X) <- c("Min","Max")
X00 <- c(totalIncome$Min,Max00)
names(X00) <- c("Min","Max")
X00 <- data.frame(totalIncome$Min,Max00)
names(X00) <- c("Min","Max")
rm(Max,Max00)
View(X)
View(X)
save.image("~/Dropbox/src/statEcon/Table 2.1.RData")
model_code <-
'
functions {
real standard_normal_rng() {
return normal_rng(0,1);
}
}
model {}
'
expose_stan_functions(stanc(model_code = model_code))
standard_normal_rng()
stanc("Regressor Model.stan")
stanc("./regressor_model.stan")
x1 <- as.list(totalIncome$Min)
View(x1)
View(x1)
x1 <- list ( x = totalIncome$Min)
View(x1)
x1 <- list ( N = 22, x = totalIncome$Min, y = totalIncome$2017)
rm(x1)
x1 <- list ( N = 22, x = totalIncome$Min, y = totalIncome$2017)
x1 <- list ( N = 22, x = totalIncome$Min, y = totalIncome$"2017")
View(x1)
income_dat <- list ( N = 22, x = totalIncome$Min, y = totalIncome$"2017")
fit <- stan(file = 'regressor_model.stan', data = income_dat)
rm(x1, X, X00)
rm(standard_normal_rng, model_code)
fit <- stan(file = 'regressor_model.stan', data = income_dat)
fit <- stan(file = './regressor_model.stan', data = income_dat)
